"""Initial schema

Revision ID: ebb440b41de1
Revises: 
Create Date: 2025-10-04 16:13:23.752301

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ebb440b41de1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('llm_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('model', sa.String(length=50), nullable=True),
    sa.Column('provider', sa.String(length=50), nullable=True),
    sa.Column('endpoint', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.String(length=255), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('tokens_prompt', sa.Integer(), nullable=True),
    sa.Column('tokens_completion', sa.Integer(), nullable=True),
    sa.Column('tokens_total', sa.Integer(), nullable=True),
    sa.Column('latency_ms', sa.Integer(), nullable=True),
    sa.Column('time_to_first_token_ms', sa.Integer(), nullable=True),
    sa.Column('cost_usd', sa.DECIMAL(precision=10, scale=6), nullable=True),
    sa.Column('messages', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('response', sa.Text(), nullable=True),
    sa.Column('temperature', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('top_p', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('has_error', sa.Boolean(), nullable=True),
    sa.Column('pii_detected', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'time')
    )
    op.create_index(op.f('ix_llm_events_model'), 'llm_events', ['model'], unique=False)
    op.create_index(op.f('ix_llm_events_project_id'), 'llm_events', ['project_id'], unique=False)
    op.create_index(op.f('ix_llm_events_provider'), 'llm_events', ['provider'], unique=False)
    op.create_index(op.f('ix_llm_events_session_id'), 'llm_events', ['session_id'], unique=False)
    op.create_index(op.f('ix_llm_events_tenant_id'), 'llm_events', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_llm_events_user_id'), 'llm_events', ['user_id'], unique=False)
    op.create_table('tenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('api_key', sa.String(length=255), nullable=False),
    sa.Column('plan', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('usage_limits', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key')
    )
    op.create_table('alerts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('condition', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('actions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alert_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('alert_id', sa.UUID(), nullable=False),
    sa.Column('triggered_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['alert_id'], ['alerts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('alert_history')
    op.drop_table('projects')
    op.drop_table('alerts')
    op.drop_table('tenants')
    op.drop_index(op.f('ix_llm_events_user_id'), table_name='llm_events')
    op.drop_index(op.f('ix_llm_events_tenant_id'), table_name='llm_events')
    op.drop_index(op.f('ix_llm_events_session_id'), table_name='llm_events')
    op.drop_index(op.f('ix_llm_events_provider'), table_name='llm_events')
    op.drop_index(op.f('ix_llm_events_project_id'), table_name='llm_events')
    op.drop_index(op.f('ix_llm_events_model'), table_name='llm_events')
    op.drop_table('llm_events')
    # ### end Alembic commands ###
